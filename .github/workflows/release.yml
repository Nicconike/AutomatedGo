name: Release
on:
    push:
        branches: master
        paths:
            - '.github/workflows/release.yml'
            - 'go.mod'
            - 'pkg/*'
            - 'cmd/automatedgo/*'

jobs:
    semantic-release:
        name: Semantic Release
        runs-on: ubuntu-latest
        if: |
            github.actor != 'dependabot[bot]' &&
            github.actor != 'github-actions[bot]' &&
            github.actor != 'protected-auto-commits[bot]'
        permissions:
            contents: write
            packages: write
            id-token: write
        outputs:
            new_release_version: ${{ steps.semantic.outputs.version }}
        steps:
          - name: GitHub App Token
            uses: actions/create-github-app-token@v1
            id: app-token
            with:
                app-id: ${{ secrets.APP_ID }}
                private-key: ${{ secrets.APP_PRIVATE_KEY }}

          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
                token: ${{ steps.app-token.outputs.token }}

          - name: Setup Go
            uses: actions/setup-go@v5
            with:
                go-version: "1.23.x"

          - name: Semantic Release
            uses: go-semantic-release/action@v1
            id: semantic
            with:
                github-token: ${{ steps.app-token.outputs.token }}
                changelog-file: CHANGELOG.md
                update-file: go.mod
                changelog-generator-opt: "emojis=true"

          - name: Update pkg.go.dev
            if: steps.semantic.outputs.version != ''
            run: |
                go list -m github.com/Nicconike/AutomatedGo/v2@v${{ steps.semantic.outputs.version }}

    goreleaser:
        name: GoReleaser
        needs: semantic-release
        runs-on: ubuntu-latest
        if: needs.semantic-release.outputs.new_release_version != ''
        permissions:
            contents: write
            packages: write
        steps:
          - name: GitHub App Token
            uses: actions/create-github-app-token@v1
            id: app-token
            with:
                app-id: ${{ secrets.APP_ID }}
                private-key: ${{ secrets.APP_PRIVATE_KEY }}

          - name: Checkout Repo
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
                token: ${{ steps.app-token.outputs.token }}

          - name: Fetch latest tags
            run: git fetch --force --tags

          - name: Setup Go
            uses: actions/setup-go@v5
            with:
                go-version: "1.23.x"

          - name: Run GoReleaser
            uses: goreleaser/goreleaser-action@v6
            with:
                distribution: goreleaser
                version: '~> v2'
                args: release --clean
            env:
                GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
                GORELEASER_CURRENT_TAG: ${{ needs.semantic-release.outputs.new_release_version }}
